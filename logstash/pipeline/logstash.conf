input {
	jdbc {
		type => "movie-info"
		jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java-8.0.25.jar"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		jdbc_connection_string => "jdbc:mysql://27.96.130.90:3306/Movie_Toy?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&autoReconnect=true"
		jdbc_user => "root"
		jdbc_password => "Toyproject1!"

		columns_charset => {
			"name" => "UTF-8"
		}

		statement => "SELECT *, unix_timestamp(modification_date_time) AS unix_ts_in_secs FROM MovieInfo WHERE (UNIX_TIMESTAMP(modification_date_time) > :sql_last_value AND modification_date_time < now()) ORDER BY modification_date_time"

		jdbc_paging_enabled => true
		use_column_value => true
		tracking_column => "unix_ts_in_secs"
		tracking_column_type => "numeric"
		clean_run => true
		# schedule => "* * * */1 * *"
		schedule => "* */1 * * * Asia/Seoul"  
	}
}

input {
	jdbc {
		type => "movie-list"
		jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java-8.0.25.jar"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		jdbc_connection_string => "jdbc:mysql://27.96.130.90:3306/Movie_Toy?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&autoReconnect=true"
		jdbc_user => "root"
		jdbc_password => "Toyproject1!"

		columns_charset => {
			"name" => "UTF-8"
		}

		statement => "SELECT *, unix_timestamp(modification_date_time) AS unix_ts_in_secs FROM MovieList WHERE (UNIX_TIMESTAMP(modification_date_time) > :sql_last_value AND modification_date_time < now()) ORDER BY modification_date_time"

		jdbc_paging_enabled => true
		use_column_value => true
		tracking_column => "unix_ts_in_secs"
		tracking_column_type => "numeric"
		clean_run => true
		schedule => "* */1 * * * Asia/Seoul"   # crontab 표기법의 스케쥴 설정
	}
}

input {
	jdbc {
		type => "daliy-movie"
		jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java-8.0.25.jar"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		jdbc_connection_string => "jdbc:mysql://27.96.130.90:3306/Movie_Toy?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&autoReconnect=true"
		jdbc_user => "root"
		jdbc_password => "Toyproject1!"

		columns_charset => {
			"name" => "UTF-8"
		}

		statement => "SELECT *, unix_timestamp(modification_date_time) AS unix_ts_in_secs FROM DailyMovie WHERE (UNIX_TIMESTAMP(modification_date_time) > :sql_last_value AND modification_date_time < now()) ORDER BY modification_date_time"

		jdbc_paging_enabled => true
		use_column_value => true
		tracking_column => "unix_ts_in_secs"
		tracking_column_type => "numeric"
		clean_run => true
		schedule => "* */1 * * * Asia/Seoul"   # crontab 표기법의 스케쥴 설정
	}
}

input {
	jdbc {
		type => "weekly-movie"
		jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java-8.0.25.jar"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		jdbc_connection_string => "jdbc:mysql://27.96.130.90:3306/Movie_Toy?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&autoReconnect=true"
		jdbc_user => "root"
		jdbc_password => "Toyproject1!"

		columns_charset => {
			"name" => "UTF-8"
		}

		statement => "SELECT *, unix_timestamp(modification_date_time) AS unix_ts_in_secs FROM WeeklyMovie WHERE (UNIX_TIMESTAMP(modification_date_time) > :sql_last_value AND modification_date_time < now()) ORDER BY modification_date_time"

		jdbc_paging_enabled => true
		use_column_value => true
		tracking_column => "unix_ts_in_secs"
		tracking_column_type => "numeric"
		clean_run => true
		schedule => "* */1 * * * Asia/Seoul"    # crontab 표기법의 스케쥴 설정
	}
}

## Add your filters / logstash plugins configuration here

output {
	if[type] == "movie-info"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "movie-info"
			user => "elastic"
			password => "changeme"
			ecs_compatibility => disabled
		}
	}
	if[type] == "movie-list"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "movie-list"
			user => "elastic"
			password => "changeme"
			ecs_compatibility => disabled
		}
	}
	if[type] == "daliy-movie"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "daliy-movie"
			user => "elastic"
			password => "changeme"
			ecs_compatibility => disabled
		}
	}
	if[type] == "weekly-movie"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "weekly-movie"
			user => "elastic"
			password => "changeme"
			ecs_compatibility => disabled
		}
	}
	
}
